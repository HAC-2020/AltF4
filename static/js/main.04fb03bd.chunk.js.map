{"version":3,"sources":["assets/agreements.svg","assets/contract.svg","assets/payments.svg","assets/secure.svg","Components/ManageCard/ManageCard.module.css","Components/Home/Home.module.css","Components/Admin/Admin.module.css","getWeb3.js","Components/NavBar/NavBar.jsx","Components/Feature/Feature.jsx","Components/ManageCard/ManageCard.jsx","Components/Home/Home.jsx","Components/Doctor/Doctor.jsx","Components/Donate/Donate.jsx","Components/AssignDoctor/AssignDoctor.jsx","Components/Forms/PatientForm.jsx","Components/Forms/AddDoctorForm.jsx","Components/Forms/AssignDoctorForm.jsx","Components/Forms/DisplayForms.jsx","Components/Admin/Admin.jsx","Components/Footer.js","App.js","serviceWorker.js","index.js","Components/Feature/Feature.module.css"],"names":["module","exports","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","NavBar","Navbar","expand","bg","variant","Brand","href","alt","src","width","height","Toggle","aria-controls","Collapse","id","Nav","className","Item","Link","Feature","styles","featurebg","maincards1","Card","style","Img","payments","Body","Title","Text","agreements","maincards2","contract","secure","ManageCard","handleClick","location","replace","cardbg","CardGroup","Header","Button","onClick","Home","props","state","setState","top","React","Component","Doctor","patientID","patientName","disease","handleChange","bind","handleSubmit","event","target","value","type","checked","name","this","preventDefault","Jumbotron","Form","Row","Col","Control","placeholder","onChange","required","File","Group","Check","label","Donate","AssignDoctor","Content","Image","floated","size","Meta","Description","extra","basic","color","PatientForm","handleAddNewpatient","email","phoneNo","patientAddress","methods","addNewPatient","send","from","accounts","x","age","sex","AddDoctorForm","handleAddNewDoctor","docName","docAddress","docSpec","AssignDoctorForm","handleAssignDoctor","patientId","assignDoctor","patientAdd","DisplayForms","activeForm","Admin","addPatient","async","addDoctor","buttonFormDisplay","Footer","fluid","md","Date","getFullYear","App","componentDidMount","eth","getAccounts","net","getId","networkId","Contract","SimpleStorageContract","abi","networks","address","donorInstance","contractAddress","error","alert","JSON","stringify","handlePublicMedicalRecord","publicRecordsMappingCount","call","count","publicRecordsArray","i","publicRecordsMapping","push","handleDonateFunds","donateFunds","gas","handleRetrieveMedicalRecordsCount","retrieveMyMedicalRecordCount","handleRetrieveMedicalRecords","medicalRecords","handleAddMedicalRecord","medicalRecordName","ipfsHash","addMedicalRecord","handleAddNewAdmin","newAdminAddress","addNewAdmin","handleShowAllPatients","getPatientMappingCount","patientsArray","patientMapping","storageValue","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04fb03bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/agreements.771a0040.svg\";","module.exports = __webpack_public_path__ + \"static/media/contract.6efe8c9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/payments.8667f767.svg\";","module.exports = __webpack_public_path__ + \"static/media/secure.9ff7a827.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardbg\":\"ManageCard_cardbg__2smSi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"Home_top__AT-Ov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonFormDisplay\":\"Admin_buttonFormDisplay__cwxfD\"};","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nexport const NavBar = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Navbar expand=\"lg\" bg=\"primary\" variant=\"dark\" >\r\n\t\t\t\t<Navbar.Brand href=\"#\">\r\n\t\t\t\t<img alt=\"\"\r\n\t\t\t\t\tsrc=\"https://img.icons8.com/color/48/000000/health-book.png\"\r\n\t\t\t\t\twidth='40px' height='40px'\r\n\t\t\t\t/>\r\n\t\t\t\tSerguro Medico\r\n\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Nav className=\"ml-auto\">\r\n\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t    <label>\r\n\t\t\t\t\t\t    \t<Nav.Link href=\"/\" className=\"NavLink\">\r\n\t\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t    </label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t    \t<Nav.Link href=\"/doctor\" className=\"NavLink\">\r\n\t\t\t\t\t\t\t\t\tDoctor\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t    </label>\t\t\t\t\t\t \r\n\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t    \t<Nav.Link href=\"/donate\" className=\"NavLink\">\r\n\t\t\t\t\t\t\t\t\tDonate\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t    </label>\t\t\t\t\t \r\n\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t    \t<Nav.Link href=\"/patientlist\" className=\"NavLink\">\r\n\t\t\t\t\t\t\t\t\tPatient List\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t    </label>\t\t\t\t\t \r\n\t\t\t\t\t\t</Nav.Item>\t\r\n\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t    \t<Nav.Link href=\"/admin\" className=\"NavLink\">\r\n\t\t\t\t\t\t\t\t\tAdmin\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t    </label>\t\t\t\t\t \r\n\t\t\t\t\t\t</Nav.Item>\t\t\t\t\t\t\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\t\t\t\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport { Card, Button} from 'react-bootstrap';\r\nimport styles from './Feature.module.css'; \r\nimport agreements from '../../assets/agreements.svg';\r\nimport contract from '../../assets/contract.svg';\r\nimport payments from '../../assets/payments.svg';\r\nimport secure from '../../assets/secure.svg';\r\n\r\nexport const Feature = () => {\r\n\t\r\n\treturn (\r\n\t\t<div className={styles.featurebg}>\r\n\t\t\t<center><h1 className=\"display-2\" >Features</h1></center>\r\n\t\t\t<div className={styles.maincards1}>\r\n\t\t\t\t<Card style={{ width: '18rem' }}>\r\n\t\t\t\t\t<Card.Img variant=\"top\" src={payments} />\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Card.Title>Transparancy</Card.Title>\r\n\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\tBlockchain holds the promise of bringing greater efficiency and transparency to the payment procedure, for example, allowing cross-border transactions to be made in real-time and money to be exchanged at the speed with which information moves today.\r\n\t\t\t\t\t\t</Card.Text>\t\t\t\t\t\t\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card style={{ width: '18rem' }}>\r\n\t\t\t\t\t<Card.Img variant=\"top\" src={agreements} />\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Card.Title>Decentralized Network</Card.Title>\r\n\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\tA Blockchain is a decentralized database that stores a registry of assets and transactions across a peer-to-peer network. The “asset” may not only be money or transactional information, but also information regarding ownership, contracts, goods, and any other information. \r\n\t\t\t\t\t\t</Card.Text>\t\t\t\t\t\t\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<div className={styles.maincards2}>\r\n\t\t\t\t<Card style={{ width: '18rem' }}>\r\n\t\t\t\t\t<Card.Img variant=\"top\" src={contract} />\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Card.Title>Smart Contract</Card.Title>\r\n\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\tOnce a smart contract is executed, payments are automatically deducted from a manufacturer's digital wallet and funds are moved into the supplier's digital wallet, so payment happens seamlessly. Smart contracts are coming because they have many tangible benefits. They reduce commerce friction, accelerate payments and make business more efficient.\r\n\t\t\t\t\t\t</Card.Text>\t\t\t\t\t\t\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card style={{ width: '18rem' }}>\r\n\t\t\t\t\t<Card.Img variant=\"top\" src={secure} />\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Card.Title>Data Safety</Card.Title>\r\n\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\tBlockchain platform ensures that your data is encrypted, which means that modification in data is a difficult task. You can also save a cryptographic signature of a document or file on a Blockchain. This would give users a way to ensure a file is un-tampered, without needing to save the entire file on the Blockchain. \r\n\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport { Card, Button, CardGroup } from 'react-bootstrap';\r\nimport styles from './ManageCard.module.css';\r\n\r\nexport const ManageCard = () => {\r\n\r\n    function handleClick(){\r\n        window.location.replace(\"https://www.w3schools.com\");\r\n    }\r\n\r\n    return (\r\n        <div className={styles.cardbg}>\r\n            <center><h2 className=\"display-3\">Manage patients data</h2></center>\r\n            <CardGroup className=\"container-fluid\">\r\n                <Card bg=\"info\">\r\n                    <Card.Header>Header</Card.Header>\r\n                    <Card.Body>\r\n                    <Card.Title> Card Title </Card.Title>\r\n                    <Card.Text>\r\n                        Some quick example text to build on the card title and make up the bulk\r\n                        of the card's content.\r\n                    </Card.Text>\r\n                    <Button variant=\"dark\" onClick={handleClick}>Go somewhere</Button>\r\n                    </Card.Body>\r\n                    \r\n                </Card>\r\n                <Card bg=\"primary\">\r\n                    <Card.Header>Header</Card.Header>\r\n                    <Card.Body>\r\n                    <Card.Title> Card Title </Card.Title>\r\n                    <Card.Text>\r\n                        Some quick example text to build on the card title and make up the bulk\r\n                        of the card's content.\r\n                    </Card.Text>\r\n                    <Button variant=\"dark\" onClick={handleClick}>Go somewhere</Button>\r\n                    </Card.Body>\r\n                    \r\n                </Card>\r\n            </CardGroup>\r\n            <br />\r\n            <CardGroup className=\"container-fluid\">\r\n                <Card bg=\"info\">\r\n                    <Card.Header>Header</Card.Header>\r\n                    <Card.Body>\r\n                    <Card.Title> Card Title </Card.Title>\r\n                    <Card.Text>\r\n                        Some quick example text to build on the card title and make up the bulk\r\n                        of the card's content.\r\n                    </Card.Text>\r\n                    <Button variant=\"dark\" onClick={handleClick}>Go somewhere</Button>\r\n                    </Card.Body>\r\n                    \r\n                </Card>\r\n                <Card bg=\"primary\">\r\n                    <Card.Header>Header</Card.Header>\r\n                    <Card.Body>\r\n                    <Card.Title> Card Title </Card.Title>\r\n                    <Card.Text>\r\n                        Some quick example text to build on the card title and make up the bulk\r\n                        of the card's content.\r\n                    </Card.Text>\r\n                    <Button variant=\"dark\" onClick={handleClick}>Go somewhere</Button>\r\n                    </Card.Body>\r\n                    \r\n                </Card>\r\n            </CardGroup>      \r\n            <hr />            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Feature } from '../Feature/Feature';\r\nimport { ManageCard } from '../ManageCard/ManageCard.jsx';\r\nimport styles from './Home.module.css';\r\n\r\nexport class Home extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tweb3: null\r\n\t\t}\r\n\t\tthis.setState = {\r\n\t\t\tweb3: props.web3\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className={styles.top}></div>\r\n\t\t\t\t<Feature />\t\t\t\t\r\n\t\t\t\t<ManageCard />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React from 'react';\r\nimport { Form, Button, Jumbotron, Col } from 'react-bootstrap';\r\n\r\nimport styles from './Doctor.module.css';\r\n\r\nexport class Doctor extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          patientID: \"#####\",\r\n          patientName: \"Rahul Gupta\",\r\n          disease: \"\"\r\n          \r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        // e.g.: send to remote API\r\n        event.preventDefault();\r\n        console.log(\"state\", this.state);\r\n        \r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <div className=\"container-fluid\">\r\n            <center><h2 className=\"display-3\">Add medical Record</h2></center>\r\n            <br />\r\n            <Jumbotron className=\"container-fluid\">\r\n              \r\n              <Form>\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your details with anyone else.\r\n                </Form.Text>\r\n                <Form.Row>\r\n                  <Col>\r\n                    <Form.Text>\r\n                        Patient ID: {this.state.patientID}\r\n                    </Form.Text>\r\n                  </Col>\r\n                  <Col>\r\n                  <Form.Text>\r\n                        Patient Name: {this.state.patientName}\r\n                    </Form.Text>\r\n                  </Col>\r\n                </Form.Row>\r\n                <br />\r\n                <label>Enter Disease</label>\r\n                <Form.Control\r\n                    name=\"disease\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter patient disease\"\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                <br />\r\n                <label><Form.Text>Upload medical record</Form.Text></label>\r\n                <Form.File />\r\n                <br />\r\n                <Form.Group>\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    label=\"Tick if the entered info is correct\"\r\n                  />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\r\n                  Update\r\n                </Button>\r\n              </Form>\r\n            </Jumbotron>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n","import React from 'react';\r\nimport styles from './Donate.module.css';\r\n\r\nexport class Donate extends React.Component{\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                This is donation dashboard\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, Card, Image } from 'semantic-ui-react'\r\n\r\nexport const AssignDoctor = () => (\r\n  <Card.Group>\r\n    <Card>\r\n      <Card.Content>\r\n        <Image\r\n          floated='right'\r\n          size='mini'\r\n          src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\r\n        />\r\n        <Card.Header>Steve Sanders</Card.Header>\r\n        <Card.Meta>Friends of Elliot</Card.Meta>\r\n        <Card.Description>\r\n          Steve wants to add you to the group <strong>best friends</strong>\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div className='ui two buttons'>\r\n          <Button basic color='green'>\r\n            Approve\r\n          </Button>\r\n          <Button basic color='red'>\r\n            Decline\r\n          </Button>\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n    <Card>\r\n      <Card.Content>\r\n        <Image\r\n          floated='right'\r\n          size='mini'\r\n          src='https://react.semantic-ui.com/images/avatar/large/molly.png'\r\n        />\r\n        <Card.Header>Molly Thomas</Card.Header>\r\n        <Card.Meta>New User</Card.Meta>\r\n        <Card.Description>\r\n          Molly wants to add you to the group <strong>musicians</strong>\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div className='ui two buttons'>\r\n          <Button basic color='green'>\r\n            Approve\r\n          </Button>\r\n          <Button basic color='red'>\r\n            Decline\r\n          </Button>\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n    <Card>\r\n      <Card.Content>\r\n        <Image\r\n          floated='right'\r\n          size='mini'\r\n          src='https://react.semantic-ui.com/images/avatar/large/jenny.jpg'\r\n        />\r\n        <Card.Header>Jenny Lawrence</Card.Header>\r\n        <Card.Meta>New User</Card.Meta>\r\n        <Card.Description>\r\n          Jenny requested permission to view your contact details\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div className='ui two buttons'>\r\n          <Button basic color='green'>\r\n            Approve\r\n          </Button>\r\n          <Button basic color='red'>\r\n            Decline\r\n          </Button>\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n  </Card.Group>\r\n)\r\n","import React from 'react';\r\nimport { Form, Button, Jumbotron, Col } from 'react-bootstrap';\r\n\r\nclass PatientForm extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        patientName: \"\",\r\n        age: null,\r\n        sex: \"\",\r\n        email: \"\",\r\n        patientAddress: \"\",\r\n        phoneNo: null\r\n      };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //admin dashboard\r\n    handleAddNewpatient = async (patientName, email, phoneNo, patientAddress) => {\r\n      try {\r\n        var x = await this.contract.methods.addNewPatient(\r\n          patientName,\r\n          email,\r\n          phoneNo,\r\n          patientAddress\r\n        )\r\n        .send({\r\n          from: this.accounts[0]\r\n        });\r\n        console.log(\"New Patient Added\" + x);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }  \r\n    }\r\n  \r\n    handleChange(event) {\r\n      const target = event.target;\r\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n      const name = target.name;\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      // e.g.: send to remote API\r\n      event.preventDefault();\r\n      console.log(\"state\", this.state);\r\n      this.handleAddNewpatient(this.state.patientName, this.state.email, this.state.phoneNo, this.state.patientAddress);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <Jumbotron>\r\n            <h3 className=\"display-5\">Enter Patient info</h3>\r\n            <Form>\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your details with anyone else.\r\n              </Form.Text>\r\n              <Form.Row>\r\n                <Col>\r\n                  <Form.Control\r\n                    name=\"patientName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Patient name\"\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Control\r\n                    name=\"age\"\r\n                    type=\"number\"\r\n                    placeholder=\"Patient Age\"\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Control\r\n                    name=\"sex\"\r\n                    type=\"text\"\r\n                    placeholder=\"Patient Sex\"\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </Col>\r\n              </Form.Row>\r\n              <br />\r\n              <Form.Group>\r\n                <Form.Control\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={this.handleChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  name=\"phoneNo\"\r\n                  type=\"number\"\r\n                  placeholder=\"Phone number\"\r\n                  onChange={this.handleChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  name=\"patientAddress\"\r\n                  type=\"text\"\r\n                  placeholder=\"Patient Eth Address\"\r\n                  onChange={this.handleChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  label=\"Tick if the entered info is correct\"\r\n                />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Jumbotron>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default PatientForm;","import React from 'react';\r\nimport { Form, Col, Button, Jumbotron} from 'react-bootstrap';\r\n\r\nexport class AddDoctorForm extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          docName: \"\",\r\n          docAddress: null,\r\n          docSpec: \"\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        // e.g.: send to remote API\r\n        event.preventDefault();\r\n        console.log(\"state\", this.state);\r\n        this.handleAddNewDoctor(this.state.docName, this.state.docAddress, this.state.docSpec );\r\n      }\r\n\r\n      //admin dashboard\r\n      handleAddNewDoctor = async (docName, docAddress, docSpec) => {\r\n        try {\r\n          var x = await this.contract.methods(\r\n            docName,\r\n            docAddress,\r\n            docSpec\r\n          )\r\n            .send({ from: this.accounts[0] });\r\n          console.log(\"Added new doctor\" + x);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <div className=\"container-fluid\">\r\n            <Jumbotron>\r\n              <h3 className=\"display-5\">Add a new Doctor</h3>\r\n              <Form>\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your details with anyone else.\r\n                </Form.Text>\r\n                <Form.Row>\r\n                  <Col>\r\n                    <Form.Control\r\n                      name=\"DocName\"\r\n                      type=\"text\"\r\n                      placeholder=\"Doctor name\"\r\n                      onChange={this.handleChange}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Control\r\n                      name=\"EthAdd\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Doctor Eth Address\"\r\n                      onChange={this.handleChange}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                </Form.Row>\r\n                <br />\r\n                <Form.Group>\r\n                  <Form.Control\r\n                    name=\"specialization\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Doctor Specialization\"\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    label=\"Tick if the entered info is correct\"\r\n                  />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\r\n                  Add\r\n                </Button>\r\n              </Form>\r\n            </Jumbotron>\r\n          </div>\r\n        );\r\n      }\r\n    }","import React from 'react';\r\nimport { Form, Button, Jumbotron, Col } from 'react-bootstrap';\r\n\r\nexport class AssignDoctorForm extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          docAddress: \"\",\r\n          patientId: \"\",\r\n          patientAddress: \"\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        // e.g.: send to remote API\r\n        event.preventDefault();\r\n        console.log(\"state\", this.state);\r\n        this.handleAssignDoctor(this.state.docAddress, this.state.patientId, this.state.patientAddress);\r\n      }\r\n\r\n      //admin dashboard show all patients me jo patiens ka data dikhega, \r\n      //har patient data card me ye function call karne k lie button hoga\r\n      handleAssignDoctor = async (docAddress, patientId, patientAddress) => {\r\n        try {\r\n          var x = await this.contract.methods.assignDoctor(docAddress, patientId, patientAddress)\r\n          .send({ from: this.accounts[0] });\r\n          console.log(\"Doc Assigned\" + x);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <div className=\"container-fluid\">\r\n            <Jumbotron>\r\n              <h3 className=\"display-5\">Assign a Doctor</h3>\r\n              <Form>\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your details with anyone else.\r\n                </Form.Text>\r\n                <Form.Row>\r\n                  <Col>\r\n                    <Form.Control\r\n                      name=\"DocID\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Doctor ID\"\r\n                      onChange={this.handleChange}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                </Form.Row>\r\n                <br />\r\n                <Form.Text>Patient ID: {this.state.patientID}</Form.Text>\r\n                <Form.Text>Patient Address: {this.state.patientAdd}</Form.Text>\r\n                <br />\r\n                <Form.Group>\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    label=\"Tick if the entered info is correct\"\r\n                  />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\r\n                  Assign Doctor\r\n                </Button>\r\n              </Form>\r\n            </Jumbotron>\r\n          </div>\r\n        );\r\n      }\r\n    }","import React from 'react';\r\nimport PatientForm from './PatientForm';\r\nimport { AddDoctorForm } from './AddDoctorForm.jsx';\r\nimport { AssignDoctorForm } from './AssignDoctorForm.jsx';\r\nconst DisplayForms = ({ activeForm }) => {\r\n   if(activeForm === 'PatientForm'){\r\n    return(\r\n        <div>\r\n            <center>\r\n                <h2 className=\"display-3\"> Patient Form</h2>\r\n                <PatientForm />    \r\n            </center>\r\n            \r\n        </div>\r\n    )\r\n   } else if (activeForm === 'AddDoctorForm'){\r\n    return(\r\n        <div>\r\n            <center>\r\n                <h2 className=\"display-3\"> Add Doctor Form</h2>\r\n                <AddDoctorForm />\r\n            </center>\r\n            \r\n        </div>\r\n    )\r\n   }else{\r\n    return(\r\n        <div>\r\n            <center>\r\n                <h2 className=\"display-3\"> Assign a doctor Form</h2>\r\n                <AssignDoctorForm />    \r\n            </center>\r\n            \r\n        </div>\r\n    )\r\n   }\r\n}\r\n\r\nexport default DisplayForms;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport styles from './Admin.module.css';\r\nimport DisplayForms from '../Forms/DisplayForms.jsx';\r\n\r\nclass Admin extends React.Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tx: \"\",\r\n\t\t\tactiveForm: \"\",\r\n\t\t\tweb3: props.web3\r\n\t\t}\r\n\t\tthis.accounts = props.accounts;\r\n\t\tthis.contract = props.contract;\r\n\t}\r\n\t\r\n\taddPatient = async => {\r\n\t\tconsole.log('add new patient');\r\n\t\tthis.setState({\r\n\t\t\t x:\"Patient\",\r\n\t\t\t activeForm: \"PatientForm\"\r\n\t\t});\r\n\t}\r\n\taddDoctor = async => {\r\n\t\tconsole.log(\"add new doctor\");\r\n\t\tthis.setState({\r\n\t\t\t x:\"Add Doctor\",\r\n\t\t\t activeForm: \"AddDoctorForm\"\r\n\t\t});\r\n\t}\r\n\tassignDoctor = async => {\r\n\t\tconsole.log(\"Assign a new doctor\");\r\n\t\tthis.setState({\r\n\t\t\t x:\"Assign Doctor\",\r\n\t\t\t activeForm: \"AssignDoctorForm\"\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\t\t\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t<center><h2 className=\"display-2\">Patient List</h2></center>\r\n\t\t\t<center><h2 className=\"display-2\">Roles that Admin can perform</h2></center>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<div className={styles.buttonFormDisplay}>\r\n\t\t\t\t<Button variant=\"info\" onClick={this.addPatient}>Add a new Patient</Button>\r\n\t\t\t\t<Button variant=\"info\" onClick={ this.addDoctor }>Add a new Doctor</Button>\r\n\t\t\t\t<Button variant=\"info\" onClick={ this.assignDoctor }>Assign a Doctor</Button>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<DisplayForms activeForm={this.state.activeForm}/>\r\n\t\t</div>\r\n\t)\r\n\t}\r\n}\r\n\r\nexport default Admin;","import React from \"react\";\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <MDBFooter color=\"elegant-color-dark\" className=\"font-small pt-4 mt-4\">\r\n      <MDBContainer fluid className=\"text-center text-md-left\">\r\n        <MDBRow>\r\n          <MDBCol md=\"6\">\r\n            <h5 className=\"title\">Footer Content</h5>\r\n            <p>\r\n              Here you can use rows and columns here to organize your footer\r\n              content.\r\n            </p>\r\n          </MDBCol>\r\n          <MDBCol md=\"6\">\r\n            <h5 className=\"title\">Links</h5>\r\n            <ul>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"#!\">Link 1</a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"#!\">Link 2</a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"#!\">Link 3</a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"#!\">Link 4</a>\r\n              </li>\r\n            </ul>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <MDBContainer fluid>\r\n          &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.mdbootstrap.com\"> MDBootstrap.com </a>\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/MedicalChain.json\";\nimport getWeb3 from \"./getWeb3\";\nimport { NavBar } from './Components/NavBar/NavBar';\nimport { Home } from './Components/Home/Home';\nimport { Doctor } from './Components/Doctor/Doctor';\nimport { Donate } from './Components/Donate/Donate.jsx';\nimport { AssignDoctor } from './Components/AssignDoctor/AssignDoctor.jsx';\nimport Admin from './Components/Admin/Admin';\nimport Footer from './Components/Footer';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Portis from '@portis/web3';\nimport Web3 from 'web3';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = { storageValue: 0, web3: null, accounts: null, contract: null };\n  }\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n\n      // this.biconomy = new Biconomy(Web3, {apiKey: \"LbOkM_BNx.b0a7a913-3db2-420e-a1d6-9ba4c8485367\"});\n      // const Web3 = new Web3(this.biconomy);\n      // const customNode = {\n      //   nodeUrl: 'https://rpc-mumbai.matic.today/',\n      //   chainId: 80001,\n      // };\n      \n      // const portis = new Portis('a7d2b587-1e58-465a-8b1e-2456836445bc', customNode);\n      // this.web3 = new Web3(portis.provider);\n      this.web3 = await getWeb3();\n        // Use web3 to get the user's accounts.\n        this.accounts = await this.web3.eth.getAccounts();\n        console.log(\"Accounts from metamask: \" + this.accounts);\n        // Get the contract instance.\n        this.networkId = await this.web3.eth.net.getId();\n        console.log(\"Matic network ID: \" + this.networkId);\n\n        this.contract = new this.web3.eth.Contract(\n        SimpleStorageContract.abi,\n        SimpleStorageContract.networks[this.networkId] && SimpleStorageContract.networks[this.networkId].address,\n        );\n        console.log(\"Contract Instance : \" + this.donorInstance);\n         \n        // await this.handleDonorCount();\n\n        // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n      this.setState({\n        web3: this.web3,\n        contractAddress: SimpleStorageContract.networks[this.networkId].address\n      });\n      console.log(\"Web3 Obj : \" + this.state.web3);\n      // portis.isLoggedIn().then(({ error, result }) => {\n      //   console.log(error, result);\n      // });\n      \n      // alert(\"Donor data retrieved from contract\");\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      console.error(error);\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.  ${ JSON.stringify(error)}`\n      );\n      \n    }\n  };\n\n  //donate dashboard\n  //table\n  handlePublicMedicalRecord = async () => {\n    try {\n      let count = await this.contract.methods.publicRecordsMappingCount().call();\n      let publicRecordsArray = [];\n      for (let i = 0; i < count; i++){\n        var x = await this.contract.methods.publicRecordsMapping(i).call();\n        publicRecordsArray.push(x);\n      }\n      this.setState({\n        publicRecordsArray: publicRecordsArray\n      })\n      console.log(\"Public Records Data: \" + publicRecordsArray);\n    } catch (err) {\n      console.log(err);\n    }\n    \n  }\n  //donate dashboard\n  //button in every public medical record to donate\n  handleDonateFunds = async (id) => {\n    try {\n      var x = await this.contract.methods.donateFunds(id)\n      .send({\n        from: this.accounts[0],\n        gas: 300000,\n        value: 10000000000000000\n      })\n    } catch(err) {\n      console.log(err);\n    }\n  }\n  //patient dashboard\n  //being called in handleRetrieveMedicalRecords\n  handleRetrieveMedicalRecordsCount = async (address) => {\n    try {\n      var x = await this.contract.methods.retrieveMyMedicalRecordCount(address).call();\n      console.log(`Patient medical records count: ${x}`);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  //patient dashboard\n  handleRetrieveMedicalRecords = async (address) => {\n    try {\n      const count = this.handleRetrieveMedicalRecordsCount(address);\n      let medicalRecords = [];\n      for (let i = 0; i < count; i++) {\n        var x = await this.contract.methods.retrieveMyMedicalRecordCount(address, i).call();\n        medicalRecords.push(x);\n      }\n      this.setState({\n        medicalRecords: medicalRecords\n      })\n      console.log(\"Patient Medical Records\" + this.state.medicalRecords);\n    } catch (err) {\n      console.log(err);\n    }\n\n  }\n  //doctor dashboard\n  handleAddMedicalRecord = async (patientId, medicalRecordName, ipfsHash) => {\n    var x = await this.contract.methods.addMedicalRecord(\n      patientId,\n      medicalRecordName,\n      ipfsHash\n    ).send({ from: this.accounts[0] });\n    console.log(\"Added medical record\" + x);\n  }\n  //admin dashboard\n  handleAddNewDoctor = async (docName, docAddress, docSpec) => {\n    try {\n      var x = await this.contract.methods(\n        docName,\n        docAddress,\n        docSpec\n      )\n        .send({ from: this.accounts[0] });\n      console.log(\"Added new doctor\" + x);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  //admin dashboard\n  handleAddNewpatient = async (patientName, email, phoneNo, patientAddress) => {\n    try {\n      var x = await this.contract.methods.addNewPatient(\n        patientName,\n        email,\n        phoneNo,\n        patientAddress\n      )\n      .send({\n        from: this.accounts[0]\n      });\n      console.log(\"New Patient Added\" + x);\n    } catch (err) {\n      console.log(err);\n    }\n    \n  }\n  //admin dashboard\n  handleAddNewAdmin = async (newAdminAddress) => {\n    try {\n      var x = await this.contract.methods.addNewAdmin(\n        newAdminAddress\n      )\n        .send({ from: this.accounts[0] });\n    console.log(\"Added new Admin\" + x);\n    } catch (err) {\n      console.log(err);\n    }\n    \n  }\n  //adminDashBoard show all patients\n  handleShowAllPatients = async () => {\n    try {\n      var count = await this.contract.methods.getPatientMappingCount().call();\n      let patientsArray = [];\n      for (let i = 0; i < count; i++) {\n        var x = await this.contract.methods.patientMapping(i).call();\n        patientsArray.push(x);\n      }\n      this.setState({\n        patientsArray: patientsArray\n      })\n      console.log(\"All Patients: \" + this.state.patientsArray);\n    } catch (err) {\n      console.log(err);\n    }\n    \n  }\n  //admin dashboard show all patients me jo patiens ka data dikhega, \n  //har patient data card me ye function call karne k lie button hoga\n  handleAssignDoctor = async (docAddress, patientId, patientAddress) => {\n    try {\n      var x = await this.contract.methods.assignDoctor(docAddress, patientId, patientAddress)\n      .send({ from: this.accounts[0] });\n      console.log(\"Doc Assigned\" + x);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    // if (!this.state.web3) {\n    //   return <div>Loading Web3, accounts, and contract...</div>;\n    // }\n    return (\n      <div>\n        <NavBar />\n        <Router>\n          <Switch>\n            <Route exact path='/' component={() => <Home contract={this.contract} accounts = {this.accounts} web3={this.state.web3}/>} />\n            <Route path=\"/doctor\" component={() => <Doctor contract={this.contract} accounts = {this.accounts} web3={this.state.web3}/>} />\n            <Route path=\"/admin\" component={() => <Admin contract={this.contract} accounts = {this.accounts}  web3={this.state.web3} />} />\n            <Route path=\"/donate\" component={() => <Donate contract={this.contract} accounts = {this.accounts} web3={this.state.web3} />} />\n            <Route path=\"/assigndoctor\" component={() => <AssignDoctor contract={this.contract} accounts = {this.accounts} web3={this.state.web3} />} />\n          </Switch>\n        </Router>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"featurebg\":\"Feature_featurebg__3IjG0\",\"heading\":\"Feature_heading__27Vp4\",\"maincards1\":\"Feature_maincards1__3DwKN\",\"maincards2\":\"Feature_maincards2__IVkyy\"};"],"sourceRoot":""}